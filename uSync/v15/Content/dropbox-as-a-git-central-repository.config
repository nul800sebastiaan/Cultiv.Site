<?xml version="1.0" encoding="utf-8"?>
<Content Key="378c2f56-de4b-4087-ad6e-fd275656975a" Alias="Dropbox as a Git central repository" Level="3">
  <Info>
    <Parent Key="63f8fc44-6b65-4c47-a1c4-ba11a5fd981a">Blog</Parent>
    <Path>/Site/Blog/DropboxAsAGitCentralRepository</Path>
    <Trashed>false</Trashed>
    <ContentType>blogPost</ContentType>
    <CreateDate>2010-01-03T15:14:34</CreateDate>
    <NodeName Default="Dropbox as a Git central repository" />
    <SortOrder>15</SortOrder>
    <Published Default="true" />
    <Schedule />
    <Template Key="a649a8ca-c7c4-4bd2-a252-d002b5483d44">BlogPost</Template>
  </Info>
  <Properties>
    <bodyText>
      <Value><![CDATA[<p>If you've been reading my blog, it should be clear by now that I'm a bit of a fan of the Git version control system.</p>
<p>I've been hosting some projects on Unfuddle for a while now, but have not been very happy with fiddling with SSH keys and setting up the central repositories through the Git Extensions for Windows. It works, but that's all I can say.</p>
<p>Another issue I was not looking forward to tackling was setting up TeamCity to pull from Unfuddle. I haven't tried, and for all I know it might work great, but if there's a perfectly good shortcut that I can take, I'll take it!</p>
<p>A few days ago I saw some tweets from people mentioning Git and DropBox as a combo. Unfortunately, I can't find the messages any more as Twitter's retention policy seems to be very aggressive. So I decided to try doing it myself.</p>
<p>The advantages of having a Git repository in DropBox are that:</p>
<ul>
<li>it does not rely on a service that (for all I know) might go out of business one day;</li>
<li>it prevents me from having to create SSH keys as credentials;</li>
<li>it makes it easier to point TeamCity to a central git repository (which is in fact on the local disk);</li>
<li>the central repository is always synced to all of my dev machines and to the DropBox server, so there is multiple backups in case of catastrophic failure;</li>
<li>you will always have the ability to push changes to a central repository, even if you have no (or intermittent) internet connectivity;</li>
<li>if you have to work without internet connectivity, but with network connectivity, you could just set-up a network share and push and pull to each of the repositories that way.</li>
</ul>
<p>I'm wildly enthusiastic about the distributed nature of the Git version control system, it really does allow me to work from anywhere and in any way that I want.</p>
<h2>Setting up Git with DropBox on Windows</h2>
<p>I am assuming that you have DropBox installed and that you are using the Git Extensions that I've mentioned in earlier blog posts on Git.</p>
<p>I've created a folder somewhere in my DropBox folders that will hold my Git repositories. In there, I've created a folder called "Example.git".</p>
<p>Next, I created a new Git repository using the Git Extensions. When you start Git Extensions, choose "Initialize new repository" from the "Commands" menu.</p>
<p>I created a "Central repository, no working dir" in the "Example.git" folder.</p>
<p><img src="umb://media/1daec5080cda428395c5febf7dccc9e4" alt="gitdropbox01" width="491" height="125" data-udi="umb://media/1daec5080cda428395c5febf7dccc9e4"></p>
<p>Then, in the folder that holds my Example project, I created a personal repository, as I would do normally when putting you project under version control (again through "Commands", "Initialize new repository").</p>
<p><img src="umb://media/9352761967be48e7b7f5a8da47f8c303" alt="gitdropbox02" width="491" height="125" data-udi="umb://media/9352761967be48e7b7f5a8da47f8c303"></p>
<p>This will open up the repository in Git Extensions. The first thing I like to do is hit the "Edit .gitignore" button, add the default ignores and commit that as the initial commit.</p>
<p><img src="umb://media/26088d1bea91496589fe52c81cc885b6" alt="gitdropbox03" width="500" height="358" data-udi="umb://media/26088d1bea91496589fe52c81cc885b6"></p>
<p>With that inital commit out of the way, I will add a remote from the "Remotes" menu.</p>
<p>I've name the new remote "DropBoxExample" and instead of entering a URL, I point to the "Examples.git" folder that I created earlier.</p>
<p><img src="umb://media/c714b6b83f704f04adaf379e713864ae" alt="gitdropbox04" width="500" height="188" data-udi="umb://media/c714b6b83f704f04adaf379e713864ae"></p>
<p>After clicking the "Save" button, Git Extensions will ask if I want to automatically configure the default push and pull behavior, I've skipped this step because the folder on the disk is not actually a server that understands commands. Then I closed the "Remote repositories" window and start pushing the master branch to the remote.</p>
<p><img src="umb://media/d2773ef9748d4e47b10d9d23cfba2d84" alt="gitdropbox05" width="499" height="274" data-udi="umb://media/d2773ef9748d4e47b10d9d23cfba2d84"></p>
<p>And got a confirmation message, it worked!</p>
<p><img src="umb://media/9bfd975bac0f450ba3bbd137fe8c331f" alt="gitdropbox06" width="500" height="233" data-udi="umb://media/9bfd975bac0f450ba3bbd137fe8c331f"></p>
<p>Now I am able to actually set the pull defaults, so I go back to managing the remote, go to the "Default pull behavior" tab to choose the defaults from the dropdown lists and clicked "Save".</p>
<p><img src="umb://media/687337b4542e4c16841c27649e12ac0e" alt="gitdropbox07" width="498" height="355" data-udi="umb://media/687337b4542e4c16841c27649e12ac0e"></p>
<p>All done!</p>
<p>I went to my other machine and created the same "D:\Dev\Example" folder.</p>
<p>I opened up Git extensions and initalized the folder as a personal repository. Then I was able to add the remote repository in exactly the same way, instead of entering a URL, I pointed to the "Example.git" folder in DropBox, saved the remote and pulled from it.</p>
<p>To my delight, I saw the .gitignore file appear immediately and noticed that I had received the commit history from the other machine. Success!</p>
<p>Of course I then proceeded to add a Visual Studio project, pushed it to the central repository, pulled it in on the other machine, and again, everything appeared as I hoped it would. Success!</p>]]></Value>
    </bodyText>
    <image>
      <Value><![CDATA[umb://media/54688228e8114deabc624ea78998bad3]]></Value>
    </image>
    <pageTitle>
      <Value><![CDATA[]]></Value>
    </pageTitle>
    <searchEngineSitemapChangeFrequency>
      <Value><![CDATA[]]></Value>
    </searchEngineSitemapChangeFrequency>
    <searchEngineSitemapPriority>
      <Value><![CDATA[]]></Value>
    </searchEngineSitemapPriority>
    <stillRelevant>
      <Value><![CDATA[0]]></Value>
    </stillRelevant>
    <umbracoNaviHide>
      <Value><![CDATA[]]></Value>
    </umbracoNaviHide>
  </Properties>
</Content>