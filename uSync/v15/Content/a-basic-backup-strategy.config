<?xml version="1.0" encoding="utf-8"?>
<Content Key="8b780c93-7446-4a37-a8cf-993c2e5320bb" Alias="A basic backup strategy" Level="3">
  <Info>
    <Parent Key="63f8fc44-6b65-4c47-a1c4-ba11a5fd981a">Blog</Parent>
    <Path>/Site/Blog/ABasicBackupStrategy</Path>
    <Trashed>false</Trashed>
    <ContentType>blogPost</ContentType>
    <CreateDate>2009-12-30T16:35:56</CreateDate>
    <NodeName Default="A basic backup strategy" />
    <SortOrder>14</SortOrder>
    <Published Default="true" />
    <Schedule />
    <Template Key="a649a8ca-c7c4-4bd2-a252-d002b5483d44">BlogPost</Template>
  </Info>
  <Properties>
    <bodyText>
      <Value><![CDATA[<p>I'm running a very simple web server for Cultiv and some other projects. It's a virtual server to which I have full remote desktop access. This means that I am the administrator and I decide what goes on at the server, no interference by my hosting provider. But, as always, with great power comes great responsibility&hellip;</p>
<p>I believe my hosting provider makes a backup of the whole server every night, and at best, I can have them restore a 1-day old backup. One day of retention is not something that I feel comfortable to rely on, by far!</p>
<p>Recently Jeff Attwood (of Coding Horror and StackOverflow fame) had a big <a href="http://www.codinghorror.com/blog/archives/001315.html">scare</a> and the resulting discussion that followed, lead to a blog post by Joel Spolsky (of FogCreek and StackOverflow fame) pointing out that <a href="http://www.joelonsoftware.com/items/2009/12/14.html">backing up is not the problem</a>, restoring usually is.</p>
<p>Well, since I had NO backup strategy, whatsoever, I figured it was about time to change that.</p>
<p>My current server specs are: A Windows Server Web - (2008 Hyper-V VPS) with IIS7 and Microsoft SQL Express server. It's that simple!</p>
<h2>What to backup?</h2>
<p>The question of what to backup seems like a simple one to me:</p>
<ul>
<li>my websites (including file/folder permissions);</li>
<li>the website's MS SQL databases;</li>
<li>the IIS configuration for the websites;</li>
<li>the IIS log files, so that I could maybe reconstruct what happened in case of a catastrophe.</li>
</ul>
<h2>How to backup?</h2>
<h3>Websites and meta content</h3>
<p>The websites are all in one folder, so that's easy (I'll talk about the permissions later).</p>
<p>I had to look a little bit to find a way to backup the configuration files, but a post about <a href="http://learn.iis.net/page.aspx/129/using-iis-70-configuration-history/"> IIS configuration history</a> was a great resource.</p>
<p>To backup the current IIS configuration, I included the %windir%\system32\inetsrv\config\ folder and I love that the configuration changes are being written automatically to the %systemdrive%\inetpub\history directory. That way, I could recover and older configuration if needed, cool!</p>
<p>Finally, I included the %systemdrive%\inetpub\logs file for the sake of it.</p>
<h3>SQL Express</h3>
<p>At first, I was backing up SQL's ".mdf" and ".ldf" files, which is an utterly stupid idea, as I learned from <a href="http://blog.stackoverflow.com/2009/12/podcast-78/">StackOverflow postcast 78</a>. So I needed a different strategy for that. SQL Express doesn't offer the ability to create automated back-ups, so I had to look for extra software. This was difficult, nothing really did what I wanted it to do: give me a bunch of .bak files. Everything I found was either too fancy or didn't work.</p>
<p>My colleague pointed me in the direction of an article on <a href="http://serverfault.com/questions/4542/sql-server-2008-express-best-backup-solution"> ServerFault</a> and I was able to construct a decent enough solution out of this.</p>
<p>I took the SQL script in the ServerFault post and modified it a little, now the backup files are zipped using 7zip instead of zip and at maximum compression ratio (7zip can compress text really, really well, so why not). I put it in the folder C:\DatabaseBackup as per the default for the script.</p>
<p>Next, I set up a scheduled task in Windows, to run the script every day. The action is "Start a program", the program/script is "sqlcmd" and the arguments are:<br> -i C:\DatabaseBackup\backup.sql -o C:\DatabaseBackup\output.txt -S .\SQLEXPRESS<br> Where .\SQLEXPRESS is the name of my (you guessed it) SQL Express server. You might need to do add some login credentials to these arguments, have a look at the <a href="http://msdn.microsoft.com/en-us/library/ms162773.aspx">sqlcmd documentation</a> for the details.</p>
<p>Finally, before running the script for the first time, I had to enable the <a href="http://msdn.microsoft.com/en-us/library/ms190693.aspx">xp_cmdshell option</a> in SQL Express. Make sure to read up on the security implications when you do so.</p>
<p>Now, this will not give you any notifications when the SQL script is unable to backup the databases. On another server, I installed <a href="http://www.valesoftware.com/products-express-agent.php">Vale Express Agent</a> to get notifications when the SQL fails. To do this, make sure to paste the SQL directly into a new backup job (don't use sqlcmd to call the script!).</p>
<h2>Where and how to backup?</h2>
<p>I've been working with <a href="http://aws.amazon.com/s3/">Amazon S3</a> lately and S3 was also mentioned in the <a href="http://blog.stackoverflow.com/2009/12/podcast-78/">podcast</a> that I mentioned earlier. Basically, Amazon makes sure that your data is in at least two locations in the world at all times. Also, S3 is terribly inexpensive, so it seemed like a good idea to backup to their servers.</p>
<p>Enter JungleDisk. I'd heard about JungleDisk before, it can backup all of my data to S3 and it is dirt cheap. It's only $5 a month for a <a href="https://www.jungledisk.com/business/">server edition</a> (which runs the backup as a Windows service), this includes the first 10 GB of storage for free! Great deal, as I currently only have a few hunder megabytes to backup anyway.</p>
<p>JungleDisk also natively supports backing up NTFS file permissions, which is exactly what I need.</p>
<p>Setting up was quite easy, however I was suddenly stuck in a "<em>looking for server</em>" screen after entering my JungleDisk credentials. As it turns out, the first time you set up the software, you have to start "<em>Set License Key for Jungle Disk Server Edition</em>" first. After that, it was easy to add the folders I needed and exclude .mdf/.ldf files.</p>
<h2>How to restore?</h2>
<p>Apparently, this is the most important part of my backup strategy&hellip; And I'm being dumb about it, because I haven't tried restoring at all. I mean, yes, I've restored a JungleDisk backup to see if I can get my files back, but that's it.</p>
<p>I am prepared to spend a few hours rebuilding my server if something happens to it. Currently I don't have much data and a simple deployment strategy, so this should not be a big problem.</p>
<p>I'll revisit the restore part once I have to move to a much bigger server, but by then, I'll probably also have to revisit the backup strategy. As I said, it's basic.</p>
<blockquote>
<p>10 PRINT "REALLY BASIC"</p>
<p>20 GOTO 10</p>
<p>RUN</p>
</blockquote>]]></Value>
    </bodyText>
    <image>
      <Value><![CDATA[umb://media/98ad0be8b5d944f0833627e373858c7d]]></Value>
    </image>
    <pageTitle>
      <Value><![CDATA[]]></Value>
    </pageTitle>
    <searchEngineSitemapChangeFrequency>
      <Value><![CDATA[]]></Value>
    </searchEngineSitemapChangeFrequency>
    <searchEngineSitemapPriority>
      <Value><![CDATA[]]></Value>
    </searchEngineSitemapPriority>
    <stillRelevant>
      <Value><![CDATA[0]]></Value>
    </stillRelevant>
    <umbracoNaviHide>
      <Value><![CDATA[]]></Value>
    </umbracoNaviHide>
  </Properties>
</Content>