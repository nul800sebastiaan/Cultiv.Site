<?xml version="1.0" encoding="utf-8"?>
<Content Key="b2606369-aa7e-4359-84c8-e3dea4829186" Alias="Comment by Harvey Williams" Level="4">
  <Info>
    <Parent Key="cfada670-108b-4789-85aa-ca031e71bff9">Using Umbraco migrations to deploy changes</Parent>
    <Path>/Site/Blog/UsingUmbracoMigrationsToDeployChanges/CommentByHarveyWilliams</Path>
    <Trashed>false</Trashed>
    <ContentType>blogPostComment</ContentType>
    <CreateDate>2017-06-08T12:52:36</CreateDate>
    <NodeName Default="Comment by Harvey Williams" />
    <SortOrder>11</SortOrder>
    <Published Default="true" />
    <Schedule />
    <Template />
  </Info>
  <Properties>
    <comment>
      <Value><![CDATA[This article really helped!<br /><br />The only thing I didn&#39;t like with the implementation is that you have to tell what the field type is when a new field is created on a table:<br /><br />```<br />Alter.Table(&quot;Statistics&quot;).AddColumn(&quot;Category&quot;).AsString().Nullable();<br />```<br /><br />It has to have `.AsString()` or an error will occur!<br /><br />I have already implemented the property on my model - if I create a new table using that model using the schema helper, it automagically decides what type the field should be:<br /><br />```<br />schemaHelper.CreateTable&lt;Statistics&gt;(false);<br />```<br /><br />I feel like I should be able to alter the table using an existing property on my model rather than having to use dodgy strings. Something more like:<br /><br />```<br />Alter.Table&lt;Statistics&gt;().AddColumn&lt;Statistics&gt;(x =&gt; x.Category);<br />```<br /><br />Where `Category` has already been decorated with `[NullSetting(NullSetting = NullSettings.Null)]`.]]></Value>
    </comment>
    <commenterEmail>
      <Value><![CDATA[harveyjwilliams@aol.co.uk]]></Value>
    </commenterEmail>
    <commenterName>
      <Value><![CDATA[Harvey Williams]]></Value>
    </commenterName>
  </Properties>
</Content>