<?xml version="1.0" encoding="utf-8"?>
<Content Key="7bc7fd85-a171-43c5-9584-baf6ff2125c0" Alias="Tip of the week: The &quot;ultimate&quot; site structure setup" Level="3">
  <Info>
    <Parent Key="63f8fc44-6b65-4c47-a1c4-ba11a5fd981a">Blog</Parent>
    <Path>/Site/Blog/TipOfTheWeekTheUltimateSiteStructureSetup</Path>
    <Trashed>false</Trashed>
    <ContentType>blogPost</ContentType>
    <CreateDate>2010-12-19T22:26:00</CreateDate>
    <NodeName Default="Tip of the week: The &quot;ultimate&quot; site structure setup" />
    <SortOrder>24</SortOrder>
    <Published Default="true" />
    <Schedule />
    <Template Key="a649a8ca-c7c4-4bd2-a252-d002b5483d44">BlogPost</Template>
  </Info>
  <Properties>
    <bodyText>
      <Value><![CDATA[<p>There's a saying in Holland that translates to (literally): "<em>A good beginning is half the work</em>". While that is a bit of an exaggeration, starting with a good structure to your new Umbraco site can be very important.</p>
<p>Last Friday I was skyping with my friend <a href="http://www.goyaweb.nl">Yannick</a> and he was having a little trouble with redirecting the home node of his site and using my <a href="http://our.umbraco.org/projects/website-utilities/cultiv-search-engine-sitemap"> search engine sitemap package</a>. After some back and forth we eventually came to the ultimate setup.</p>
<p>Basically, there will always be two nodes: "Site settings" and "Home". The settings node is there so a few site-specific settings (like the Google Analytics account) can be stored. It also helps preventing editors from being able to create documents of just any type. By default, under the "Content" node you can create nodes of all kinds and generally, you want to very much limit what they can create to prevent the site from becoming a mess.</p>
<p>You can see an example of this structure in the following image:</p>
<p><img src="/media/94888770f8104fafb8ffc63e449effe1/00000006000000000000000000000000/structure-example.png" alt="structure-example" width="200" height="272" data-udi="umb://media/94888770f8104fafb8ffc63e449effe1"></p>
<p>The "Site" node has the hostname(s) of the site set to it, although it doesn't have to have that. Umbraco will present the first node that it finds in the content tree as the homepage of the site.</p>
<p>I've redirected the "Site" node to the "Home" node so that the correct page will be shown to people entering the site. Later on in the development of your site, I'll be using Umbraco's NiceUrl method to point to pages in my site. Some of those NiceUrl calls go to the "Home" page. This will currently point to "/home".</p>
<p>If you've setup your site to redirect using the umbracoRedirect property, you will have created a 302 redirect from "/" to "/home". This is not what you want for two reasons:</p>
<ol>
<li>search engines don't like that there are two pages in the site with the exact same content</li>
<li>search engines know that a 302 redirect means that it's temporary, so they will keep expecting that the "/" and the "/home" pages are supposed to be different</li>
</ol>
<p>Additionally, you will be faced with another, more immediate couple of problems in Umbraco:</p>
<ol>
<li>the altTemplate mechanism controlled by the 404handlers.config gets confused and only works if you prefix the template name with "/home", which would cause a problem with the search engine sitemap package that I mentioned earlier</li>
<li>you are suddenly unable to <a href="http://our.umbraco.org/wiki/reference/umbraco-best-practices/umbracoredirect"> save XSLT files</a> from the built-in editor in Umbraco</li>
</ol>
<p>This is easily fixed though. On the "Site" node, I've put a property of the Content Picker type with the alias of <a href="/{localLink:0}" title="Umbraco tip of the week: Redirects">umbracoInternalRedirectId</a> that will not actually do a redirect, but will render whatever node you pick instead of the current node. Logically, I have picked the "Home" node.</p>
<p>This leaves you with a bit of a problem still, as Umbraco's NiceUrl method still produces links to "/home". To solve this, you can just do a simple urlRewrite and make the "/home" call always do a 301 (permanently moved) redirect to "/". Just the way search engines like it. Be careful: this will cause an infinite loop if you do it while the umbracoRedirect property is still on there, only do this with the <strong>umbracoInternalRedirectId</strong> property.</p>
<p>The urlRewrite config looks like this (note the "$" at the end of "home" is there to make sure that if you want any nodes under your home page, they won't be rewritten as well):</p>
<pre class="brush: xml">&lt;add name="home"<br>
virtualUrl= "^~/home$"<br>
rewriteUrlParameter="ExcludeFromClientQueryString"<br>
destinationUrl="~/"<br>
ignoreCase="true"<br>
redirect="Application"<br>
redirectMode="Permanent" /&gt;
</pre>
<p>And there you have it, the "ultimate" site structure for you to start your site with. Google is happy, Umbraco is happy (it will save your XSLT files again), everybody is happy!</p>
<p><em>That being said, this will probably be my last blog post for this year. Happy holidays and see you next year.</em></p>]]></Value>
    </bodyText>
    <image>
      <Value><![CDATA[umb://media/93e62d8a6fe34378bc6330a79e82221a]]></Value>
    </image>
    <pageTitle>
      <Value><![CDATA[]]></Value>
    </pageTitle>
    <searchEngineSitemapChangeFrequency>
      <Value><![CDATA[]]></Value>
    </searchEngineSitemapChangeFrequency>
    <searchEngineSitemapPriority>
      <Value><![CDATA[]]></Value>
    </searchEngineSitemapPriority>
    <stillRelevant>
      <Value><![CDATA[0]]></Value>
    </stillRelevant>
    <umbracoNaviHide>
      <Value><![CDATA[]]></Value>
    </umbracoNaviHide>
  </Properties>
</Content>